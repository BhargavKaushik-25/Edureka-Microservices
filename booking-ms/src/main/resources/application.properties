#spring.datasource.url=jdbc:mysql://localhost:3306/bookingdb
##server.port=8082
#spring.datasource.username=bookinguser
#spring.datasource.password=Booking@123
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#
#server.port=8082
##Eureka server URL
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#










## Minimal local config ? Booking-MS should fetch the rest from Config Server
#spring.application.name=booking-ms
#
## Tell Spring to import config from your Config Server
#spring.config.import=optional:configserver:http://localhost:9296
#
## Eureka (so booking-ms can register itself)
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#
## (Optional) expose actuator endpoints locally for health checks
#management.endpoints.web.exposure.include=*



























spring.application.name=booking-ms

spring.datasource.url=jdbc:mysql://localhost:3306/bookingdb
spring.datasource.username=bookinguser
spring.datasource.password=Booking@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

server.port=8082
#Eureka server URL
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# ActiveMQ - broker address & credentials
spring.activemq.broker-url=tcp://localhost:61616
spring.activemq.user=admin
spring.activemq.password=admin

# If you intend to use topics (pub/sub) instead of queues, you can enable:
# spring.jms.pub-sub-domain=true


